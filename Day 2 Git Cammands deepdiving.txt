Day 2:Git Cammands deepdiving

Initializing a New Repository
git init                                           : Create a new local Git repository
git clone https://github.com/tush1809/repo.git     : Clone a remote repository to your machine
git status                                         : Show the status of changes whether it is staged, unstaged, untracked
git add filename.txt                               : Stage a specific file
git add .                                          : Stage all changes in the current directory
git commit -m "message"                            : Commit staged changes with a message

Checking Commit History

git log                                            : View full commit history
git log --oneline                                  : View commit history linewise

Branch Management

git branch                                         : List all local branches
git branch new-feature                             : Create a new branch named 'new-feature'
git checkout main                                  : Switch to the 'main' branch
git checkout new-feature                           : Switch to 'new-feature' branch
git checkout -b new-feature                        : Create and switch to a new branch
git merge new-feature                              : Merge 'new-feature' into current branch

Viewing Changes

git diff                                           : Show changes not staged for commit
git diff --staged                                  : Show changes that are staged for commit

Connecting to Remote Repository

git remote add origin https://github.com/tush1809/repo.git  : Link the local repo with a GitHub repo
git push                                           : Push changes to remote (after first push)
git push -u origin main                            : Push the current branch and set upstream

Pull Latest Changes from Remote

git pull origin main                               : Fetch and merge changes from remote main branch
git branch -M main                                 : Rename current branch to 'main'
git branch -d branch-name                          : Delete a local branch safely

